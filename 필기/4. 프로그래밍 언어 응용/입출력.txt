입출력(I/O)
java.io

1. 입출력이란?
	- Input/Output   입력 / 출력 
	- 컴퓨터 내부 또는 외부와 프로그램간의 데이터를 주고받는 것
	
2. 스트림(stream)
	- 데이터가 이동하는 통로
	- 입력 통로(입력 스트림)
	- 출력 통로(출력 스트림)


바이트기반 스트림 : 데이터 크기가 byte 단위 / 1byte씩 읽어오는 스트림

	1. 입력 스트림 - InputStream : 추상 클래스
		기반 스트림 : 데이터에 직접 접근하는 스트림
			ByteArrayInputStream : 메모리 기반(변수와 동일하게 생각해도 됨)
			FileInputStream : 파일 기반(파일 경로)
			
		보조 스트림 : 다른 스트림에 기능을 추가하는 스트림 -> 생성자 매개변수가 다른 스트림이다.
			FilterInputStream : 보조 스트림의 상위 클래스
				BufferedInputStream : 다른 스트림에 버퍼 기능을 추가
				DataInputStream : 다른 스트림에 기본 자료형으로 데이터를 읽어 올 수 있는 기능을 추가
					- 끝까지 다 읽으면 EOFException 발생
						EOF(End Of File)
						
			ObjectInputStream : 객체 형태로 읽어 올 수 있도록 변환 기능을 추가	
			
	2. 출력 스트림 - OutputStream : 추상 클래스
		기반 스트림 : 데이터에 직접 접근하는 스트림
			ByteArrayOutputStream : 메모리 기반(변수와 동일하게 생각해도 됨)
			FileOutputStream : 파일 기반(파일 경로)
		
		보조 스트림 : 다른 스트림에 기능을 추가하는 스트림에
			FilterOutputStream : 보조 스트림의 상위 클래스
				BufferedOutputStream : 다른 스트림에 버퍼 기능을 추가
				DataOutputStream : 다른 스트림에 기본 자료형으로 데이터를 쓸 수 있는 기능을 추가
	
			ObjectOutputStream :  객체 형태로 쓸 수 있도록 변환 기능 추가
		
		
	참고)
	데코레이터 패턴
	
	class BufferedInputStream extends InputStream{
		private inpuStream in;
	
		public BufferedInputStream(InputStream in) {
			this.in = in;
		}
		
		public in read() {
		 // 추가 기능 - 버퍼제공
	
		int ch = in.read() // 대신(Proxy) 수행 - 핵심 기능을
		 // 추가 기능
	
			return ch;
		}
		
	}

	
문자기반 스트림 : 데이터 크기가 문자 단위(유니코드 - 2, 3 바이트) -> byte 기반이면 깨지기 때문에
	
	1. 입력 스트림 - Reader : 추상 클래스
		기반 스트림
			CharArrayReader : 메모리 기반
			StringReader : 메모리 기반
			FileReader : 파일 기반
		
		보조 스트림
			FilterReader
				BufferedReader
					: String readLine() - 문장 단위로 읽어오는 메서드
			InputStreamReader : 바이트 기반 스트림(InputStream)을 문자 기반 스트림(Reader)으로 변환
	
	2. 출력 스트림 - Writer : 추상 클래스
		기반 스트림
			CharArrayWriter : 메모리 기반
			StringWriter
			FileWriter
		
		보조스트림
			FilterWriter
				-BufferedWriter
				
			OutputStreamWriter : 바이트 단위 스트림(OutputStream) -> 문자 단위 스트림(Writer)	
				
				
		기타
			printStream (기반 + 버퍼)
			PrintWriter
				- print 	종류의 메서드
				- println
				- printf

표준입출력 : 콘솔에 입력, 출력
	1. System.in : InputStream 
	2. System.out : PrintStream
	3. System.err : PrintStream 

File
	- 파일, 디렉토리를 다루는 클래스(정보확인, 편의 기능)
	- separator
		OS에 따라 경로 (구분기호)가 다르다. 리눅스 & 맥 / , 윈도우 \
		
	- pathSeparator	
		OS에 따라 경로 (마침기호)가 다르다. 리눅스 & 맥 : , 윈도우 ;
		
	4-w(쓰기) 2-r(읽기) 1-x(실행권한)
	
	chmod nnn

직렬화(Serialization)
	- 인스턴스 변수만 구성해서 보낸다.
	- 객체에 저장된 데이터를 스트림에 쓰기(write)위해 연속적인(serial) 데이터로 변환하는 것을 말한다.
	- 마크 인터페이스인 Serialization을 구현(implements Serializable)해야지만 가능하다.
	
	1. ObjectInputStream
	2. ObjectOutputStream

직렬화 배제(transient)




참고)
	InputStreamReader : 바이트 단위 입력 스트림 -> 문자 단위 
	
	OutputStreamWriter : 바이트 단위 출력 스트림 -> 문자 단위